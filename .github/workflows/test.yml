name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  anchor-tests:
    name: Anchor Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: packages/x402-escrow/package-lock.json

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.anza.xyz/stable/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Setup Solana
        run: |
          solana --version
          solana-keygen new --no-bip39-passphrase
          solana config set --url localhost

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install Anchor
        run: |
          cargo install --git https://github.com/coral-xyz/anchor --tag v0.31.1 anchor-cli --locked --force
          anchor --version

      - name: Cache Anchor build
        uses: actions/cache@v3
        with:
          path: |
            packages/x402-escrow/target
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-anchor-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        working-directory: packages/x402-escrow
        run: npm ci

      - name: Build program
        working-directory: packages/x402-escrow
        run: anchor build

      - name: Run tests
        working-directory: packages/x402-escrow
        run: anchor test --skip-local-validator

  python-tests:
    name: Python Tests (Verifier Oracle)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: packages/x402-verifier/requirements.txt

      - name: Install dependencies
        working-directory: packages/x402-verifier
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: Run tests
        working-directory: packages/x402-verifier
        run: |
          pytest tests/ -v --cov=. --cov-report=xml --cov-report=term

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: packages/x402-verifier/coverage.xml
          flags: verifier
          name: verifier-coverage

  sdk-tests:
    name: SDK Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: packages/x402-sdk/package-lock.json

      - name: Install dependencies
        working-directory: packages/x402-sdk
        run: npm ci

      - name: Build
        working-directory: packages/x402-sdk
        run: npm run build

      - name: Run tests
        working-directory: packages/x402-sdk
        run: npm test

  lint:
    name: Lint & Format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Check Rust formatting
        working-directory: packages/x402-escrow/programs/x402-escrow
        run: cargo fmt --check

      - name: Run Clippy
        working-directory: packages/x402-escrow/programs/x402-escrow
        run: cargo clippy -- -D warnings

      - name: Check Python formatting
        working-directory: packages/x402-verifier
        run: |
          pip install black flake8
          black --check .
          flake8 .

      - name: Check TypeScript formatting (SDK)
        working-directory: packages/x402-sdk
        run: |
          npm ci
          npm run lint
